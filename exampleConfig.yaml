---
type: yml # default type

# Application configuration, these settings can be overridden with the command-line flags
#app:
#  verbose: true # Enable more logging, default is false
#  debug: true # Enable debug logging, default is false
#  jsonLoggingEnabled: true # Enable json logging format, default is false. When logging to json format no output table is shown
#  logFile: /path/where/to/log.json # Path to log to a file. No standard output is available anymore. When logging to json format no output table is shown

# Don't check for information in Kubernetes cluster, default is true
#kubernetesFetchEnabled: false 

# By default, all namespaces are checked. You can provide a list of namespaces to check instead.
#
#namespaces:
#  - test
#  - kube-system

# By default DockerHub, Quay, gcr.io, k8s.gcr.io, and Zalando repository are configured
# If your images are using one of these registries the version fetching will work automatically
#
#imageRegistries: 
# If you need to fetch versions for private images from the default registries please override the authentication method and username/password
# If the images are on a private registry but all the images are originally from one of the default registries, for example, DockerHub. 
# You can set one of the default registries to default and it will use that registry to fetch the latest versions regardless of what registry is specified on the image in Kubernetes.    
#
#  dockerHub:
#    username: 
#    password:
#    default: true or false
#  quay:
#    username: 
#    password: 
#    authType: # Can be basic or token
#    default: true or false
#  gcr:
#    username: 
#    password: 
#    authType: # Can be basic or token
#    default: true or false
#  gcrK8s:
#    username: 
#    password: 
#    authType: # Can be basic or token
#    default: true or false
#  zalando:
#    username: 
#    password: 
#    authType: # Can be basic or token
#    default: true or false 

# You can configure a private registry here. 
# You can also specify certain registry URLs that are used by your images to use one of the default registries to fetch the latest version from.
# You can specify multiple URLs at the same time that need to be overridden.
#
#  overrideRegistries: 
#    - registry: # Use this only when you want to add a private registry
#        url: 
#        authType: # Can be none, basic or token
#        username: # Not needed if AuthType set to none
#        password: # Not needed if AuthType set to none
#      registryName: # Use one of the default registries: DockerHub, Quay, Gcr, GcrK8s, Zalando
#      urls:
#        - some.url.io
#      allowAllReleases: true # This allows all semver versions, like release candidates or custom suffixes. Default is false

# If certain images need to use a different registry to fetch the latest version from then you can specify your private registry here or you can select one of the default ones to be used. 
# This always takes precedence above all the above registry configuration.
#
#  override:   
#    - registry: # Use this only when you want to add a private registry
#        url: 
#        authType: # Can be none, basic or token
#        username: # Not needed if AuthType set to none
#        password: # Not needed if AuthType set to none
#      registryName: # Use one of the default registries: DockerHub, Quay, Gcr, GcrK8s, Zalando
#      images:
#        - test/something # Name of the image, you can also use regular expressions
#      allowAllReleases: true # This allows all semver versions, like release candidates or custom suffixes. Default is false

# If the image names in the private repo and online are not the same then they can be overridden here. 
# Note this is only used to fetch the latest version everything else is based on the private name 
#  overrideImageNames:
#    test: test/test

#If you have images that the LCM currently can't automatically find because you run them somewhere else outside of Kubernetes then you can specify them by hand here
#
#images:
#  - test/some:1.1.2 # Please provide the full URL unless it's docker hub
#  - registry.io/test/some:1.2.1

# LCM can also fetch known vulnerabilities for your images using an external tool and display them. 
# Currently, only Jfrog Xray is supported. 
#imageScanners:
#  xray:  
#    hostname: xray.somenonexistingurl.io
#    username: 
#    password:
#    prefixes: # Xray uses a prefix to fetch scanning information, you can provide the prefixes to use per container
#      - prefix: artifactory/docker  
#        images: # You can specify certain images or you can use regular expressions
#          - chamber
#          - ssl-cert 
#  severity: # You can specify which severity levels count as vulnerable
#    - Critical
#    - High

# You can specify static tools for which you want to find the latest versions on GitHub
#tools:
#  - repo: hashicorp/terraform                         
#    version: "0.11.14"

# Looking up latest version on GitHub works out of the box but you can add your username/password or token if you are hitting GitHub limits
#toolRegistries:
#  gitHub:
#    username: test # Optional
#    password: test # Optional
#    token: test # Optional
